==================================== INPUT ====================================
query LinkedHandleField($id: ID!) @raw_response_type {
  node(id: $id) {
    ... on User {
      friends(first: 10) @__clientField(handle: "clientFriends") {
        count
      }
    }
  }
}

query ScalarHandleField($id: ID!) @raw_response_type {
  node(id: $id) {
    ... on User {
      name @__clientField(handle: "clientName")
    }
  }
}
==================================== OUTPUT ===================================
/*
 * future proof enums: false
 * future proof abstract types: false
 */

export type LinkedHandleFieldVariables = {
  id: string
};
export type LinkedHandleFieldResponse = {
  readonly node: {
    readonly friends?: {
      readonly count: number | null
    } | null
  } | null
};
export type LinkedHandleFieldRawResponse = {
  readonly node: {
    readonly __typename: "User",
    readonly id: string,
    readonly friends: {
      readonly count: number | null
    } | null,
  } | {
    readonly __typename: string,
    readonly id: string,
  } | null
};
export type LinkedHandleField = {
  variables: LinkedHandleFieldVariables,
  response: LinkedHandleFieldResponse,
  rawResponse: LinkedHandleFieldRawResponse,
};
-------------------------------------------------------------------------------
export type ScalarHandleFieldVariables = {
  id: string
};
export type ScalarHandleFieldResponse = {
  readonly node: {
    readonly name?: string | null
  } | null
};
export type ScalarHandleFieldRawResponse = {
  readonly node: {
    readonly __typename: "User",
    readonly id: string,
    readonly name: string | null,
  } | {
    readonly __typename: string,
    readonly id: string,
  } | null
};
export type ScalarHandleField = {
  variables: ScalarHandleFieldVariables,
  response: ScalarHandleFieldResponse,
  rawResponse: ScalarHandleFieldRawResponse,
};
-------------------------------------------------------------------------------
/*
 * future proof enums: true
 * future proof abstract types: false
 */

export type LinkedHandleFieldVariables = {
  id: string
};
export type LinkedHandleFieldResponse = {
  readonly node: {
    readonly friends?: {
      readonly count: number | null
    } | null
  } | null
};
export type LinkedHandleFieldRawResponse = {
  readonly node: {
    readonly __typename: "User",
    readonly id: string,
    readonly friends: {
      readonly count: number | null
    } | null,
  } | {
    readonly __typename: string,
    readonly id: string,
  } | null
};
export type LinkedHandleField = {
  variables: LinkedHandleFieldVariables,
  response: LinkedHandleFieldResponse,
  rawResponse: LinkedHandleFieldRawResponse,
};
-------------------------------------------------------------------------------
export type ScalarHandleFieldVariables = {
  id: string
};
export type ScalarHandleFieldResponse = {
  readonly node: {
    readonly name?: string | null
  } | null
};
export type ScalarHandleFieldRawResponse = {
  readonly node: {
    readonly __typename: "User",
    readonly id: string,
    readonly name: string | null,
  } | {
    readonly __typename: string,
    readonly id: string,
  } | null
};
export type ScalarHandleField = {
  variables: ScalarHandleFieldVariables,
  response: ScalarHandleFieldResponse,
  rawResponse: ScalarHandleFieldRawResponse,
};
-------------------------------------------------------------------------------
/*
 * future proof enums: false
 * future proof abstract types: true
 */

export type LinkedHandleFieldVariables = {
  id: string
};
export type LinkedHandleFieldResponse = {
  readonly node: {
    readonly friends?: {
      readonly count: number | null
    } | null
  } | null
};
export type LinkedHandleFieldRawResponse = {
  readonly node: {
    readonly __typename: "User",
    readonly id: string,
    readonly friends: {
      readonly count: number | null
    } | null,
  } | {
    readonly __typename: string,
    readonly id: string,
  } | null
};
export type LinkedHandleField = {
  variables: LinkedHandleFieldVariables,
  response: LinkedHandleFieldResponse,
  rawResponse: LinkedHandleFieldRawResponse,
};
-------------------------------------------------------------------------------
export type ScalarHandleFieldVariables = {
  id: string
};
export type ScalarHandleFieldResponse = {
  readonly node: {
    readonly name?: string | null
  } | null
};
export type ScalarHandleFieldRawResponse = {
  readonly node: {
    readonly __typename: "User",
    readonly id: string,
    readonly name: string | null,
  } | {
    readonly __typename: string,
    readonly id: string,
  } | null
};
export type ScalarHandleField = {
  variables: ScalarHandleFieldVariables,
  response: ScalarHandleFieldResponse,
  rawResponse: ScalarHandleFieldRawResponse,
};
-------------------------------------------------------------------------------
/*
 * future proof enums: true
 * future proof abstract types: true
 */

export type LinkedHandleFieldVariables = {
  id: string
};
export type LinkedHandleFieldResponse = {
  readonly node: {
    readonly friends?: {
      readonly count: number | null
    } | null
  } | null
};
export type LinkedHandleFieldRawResponse = {
  readonly node: {
    readonly __typename: "User",
    readonly id: string,
    readonly friends: {
      readonly count: number | null
    } | null,
  } | {
    readonly __typename: string,
    readonly id: string,
  } | null
};
export type LinkedHandleField = {
  variables: LinkedHandleFieldVariables,
  response: LinkedHandleFieldResponse,
  rawResponse: LinkedHandleFieldRawResponse,
};
-------------------------------------------------------------------------------
export type ScalarHandleFieldVariables = {
  id: string
};
export type ScalarHandleFieldResponse = {
  readonly node: {
    readonly name?: string | null
  } | null
};
export type ScalarHandleFieldRawResponse = {
  readonly node: {
    readonly __typename: "User",
    readonly id: string,
    readonly name: string | null,
  } | {
    readonly __typename: string,
    readonly id: string,
  } | null
};
export type ScalarHandleField = {
  variables: ScalarHandleFieldVariables,
  response: ScalarHandleFieldResponse,
  rawResponse: ScalarHandleFieldRawResponse,
};
