==================================== INPUT ====================================
mutation InputHasArray($input: UpdateAllSeenStateInput) @raw_response_type {
  viewerNotificationsUpdateAllSeenState(input: $input) {
    stories {
      actorCount
    }
  }
}
==================================== OUTPUT ===================================
/*
 * future proof enums: false
 * future proof abstract types: false
 */

export type UpdateAllSeenStateInput = {
  clientMutationId?: string | null,
  storyIds?: ReadonlyArray<string | null> | null,
};
export type InputHasArrayVariables = {
  input?: UpdateAllSeenStateInput | null
};
export type InputHasArrayResponse = {
  readonly viewerNotificationsUpdateAllSeenState: {
    readonly stories: ReadonlyArray<{
      readonly actorCount: number | null
    } | null> | null
  } | null
};
export type InputHasArrayRawResponse = {
  readonly viewerNotificationsUpdateAllSeenState: {
    readonly stories: ReadonlyArray<{
      readonly actorCount: number | null,
      readonly id: string,
    } | null> | null
  } | null
};
export type InputHasArray = {
  variables: InputHasArrayVariables,
  response: InputHasArrayResponse,
  rawResponse: InputHasArrayRawResponse,
};
-------------------------------------------------------------------------------
/*
 * future proof enums: true
 * future proof abstract types: false
 */

export type UpdateAllSeenStateInput = {
  clientMutationId?: string | null,
  storyIds?: ReadonlyArray<string | null> | null,
};
export type InputHasArrayVariables = {
  input?: UpdateAllSeenStateInput | null
};
export type InputHasArrayResponse = {
  readonly viewerNotificationsUpdateAllSeenState: {
    readonly stories: ReadonlyArray<{
      readonly actorCount: number | null
    } | null> | null
  } | null
};
export type InputHasArrayRawResponse = {
  readonly viewerNotificationsUpdateAllSeenState: {
    readonly stories: ReadonlyArray<{
      readonly actorCount: number | null,
      readonly id: string,
    } | null> | null
  } | null
};
export type InputHasArray = {
  variables: InputHasArrayVariables,
  response: InputHasArrayResponse,
  rawResponse: InputHasArrayRawResponse,
};
-------------------------------------------------------------------------------
/*
 * future proof enums: false
 * future proof abstract types: true
 */

export type UpdateAllSeenStateInput = {
  clientMutationId?: string | null,
  storyIds?: ReadonlyArray<string | null> | null,
};
export type InputHasArrayVariables = {
  input?: UpdateAllSeenStateInput | null
};
export type InputHasArrayResponse = {
  readonly viewerNotificationsUpdateAllSeenState: {
    readonly stories: ReadonlyArray<{
      readonly actorCount: number | null
    } | null> | null
  } | null
};
export type InputHasArrayRawResponse = {
  readonly viewerNotificationsUpdateAllSeenState: {
    readonly stories: ReadonlyArray<{
      readonly actorCount: number | null,
      readonly id: string,
    } | null> | null
  } | null
};
export type InputHasArray = {
  variables: InputHasArrayVariables,
  response: InputHasArrayResponse,
  rawResponse: InputHasArrayRawResponse,
};
-------------------------------------------------------------------------------
/*
 * future proof enums: true
 * future proof abstract types: true
 */

export type UpdateAllSeenStateInput = {
  clientMutationId?: string | null,
  storyIds?: ReadonlyArray<string | null> | null,
};
export type InputHasArrayVariables = {
  input?: UpdateAllSeenStateInput | null
};
export type InputHasArrayResponse = {
  readonly viewerNotificationsUpdateAllSeenState: {
    readonly stories: ReadonlyArray<{
      readonly actorCount: number | null
    } | null> | null
  } | null
};
export type InputHasArrayRawResponse = {
  readonly viewerNotificationsUpdateAllSeenState: {
    readonly stories: ReadonlyArray<{
      readonly actorCount: number | null,
      readonly id: string,
    } | null> | null
  } | null
};
export type InputHasArray = {
  variables: InputHasArrayVariables,
  response: InputHasArrayResponse,
  rawResponse: InputHasArrayRawResponse,
};
