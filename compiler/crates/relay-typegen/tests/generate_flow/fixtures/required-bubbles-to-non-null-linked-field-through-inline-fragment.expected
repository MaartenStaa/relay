==================================== INPUT ====================================
fragment SomeFragment on User {
  nearest_neighbor {
    ... on User {
      name @required(action: LOG)
    }
  }
}
==================================== OUTPUT ===================================
/*
 * future proof enums: false
 * future proof abstract types: false
 */

import type { FragmentReference } from "relay-runtime";
declare export opaque type SomeFragment$ref: FragmentReference;
declare export opaque type SomeFragment$fragmentType: SomeFragment$ref;
export type SomeFragment = {|
  +nearest_neighbor: ?{|
    +name: string
  |},
  +$refType: SomeFragment$ref,
|};
export type SomeFragment$data = SomeFragment;
export type SomeFragment$key = {
  +$data?: SomeFragment$data,
  +$fragmentRefs: SomeFragment$ref,
  ...
};
-------------------------------------------------------------------------------
/*
 * future proof enums: true
 * future proof abstract types: false
 */

import type { FragmentReference } from "relay-runtime";
declare export opaque type SomeFragment$ref: FragmentReference;
declare export opaque type SomeFragment$fragmentType: SomeFragment$ref;
export type SomeFragment = {|
  +nearest_neighbor: ?{|
    +name: string
  |},
  +$refType: SomeFragment$ref,
|};
export type SomeFragment$data = SomeFragment;
export type SomeFragment$key = {
  +$data?: SomeFragment$data,
  +$fragmentRefs: SomeFragment$ref,
  ...
};
-------------------------------------------------------------------------------
/*
 * future proof enums: false
 * future proof abstract types: true
 */

import type { FragmentReference } from "relay-runtime";
declare export opaque type SomeFragment$ref: FragmentReference;
declare export opaque type SomeFragment$fragmentType: SomeFragment$ref;
export type SomeFragment = {|
  +nearest_neighbor: ?{|
    +name: string
  |},
  +$refType: SomeFragment$ref,
|};
export type SomeFragment$data = SomeFragment;
export type SomeFragment$key = {
  +$data?: SomeFragment$data,
  +$fragmentRefs: SomeFragment$ref,
  ...
};
-------------------------------------------------------------------------------
/*
 * future proof enums: true
 * future proof abstract types: true
 */

import type { FragmentReference } from "relay-runtime";
declare export opaque type SomeFragment$ref: FragmentReference;
declare export opaque type SomeFragment$fragmentType: SomeFragment$ref;
export type SomeFragment = {|
  +nearest_neighbor: ?{|
    +name: string
  |},
  +$refType: SomeFragment$ref,
|};
export type SomeFragment$data = SomeFragment;
export type SomeFragment$key = {
  +$data?: SomeFragment$data,
  +$fragmentRefs: SomeFragment$ref,
  ...
};
