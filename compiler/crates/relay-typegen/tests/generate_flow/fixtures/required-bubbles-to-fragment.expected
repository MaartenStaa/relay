==================================== INPUT ====================================
fragment NonNullFragment on User {
  firstName
  lastName @required(action: NONE)
}
==================================== OUTPUT ===================================
/*
 * future proof enums: false
 * future proof abstract types: false
 */

import type { FragmentReference } from "relay-runtime";
declare export opaque type NonNullFragment$ref: FragmentReference;
declare export opaque type NonNullFragment$fragmentType: NonNullFragment$ref;
export type NonNullFragment = ?{|
  +firstName: ?string,
  +lastName: string,
  +$refType: NonNullFragment$ref,
|};
export type NonNullFragment$data = NonNullFragment;
export type NonNullFragment$key = {
  +$data?: NonNullFragment$data,
  +$fragmentRefs: NonNullFragment$ref,
  ...
};
-------------------------------------------------------------------------------
/*
 * future proof enums: true
 * future proof abstract types: false
 */

import type { FragmentReference } from "relay-runtime";
declare export opaque type NonNullFragment$ref: FragmentReference;
declare export opaque type NonNullFragment$fragmentType: NonNullFragment$ref;
export type NonNullFragment = ?{|
  +firstName: ?string,
  +lastName: string,
  +$refType: NonNullFragment$ref,
|};
export type NonNullFragment$data = NonNullFragment;
export type NonNullFragment$key = {
  +$data?: NonNullFragment$data,
  +$fragmentRefs: NonNullFragment$ref,
  ...
};
-------------------------------------------------------------------------------
/*
 * future proof enums: false
 * future proof abstract types: true
 */

import type { FragmentReference } from "relay-runtime";
declare export opaque type NonNullFragment$ref: FragmentReference;
declare export opaque type NonNullFragment$fragmentType: NonNullFragment$ref;
export type NonNullFragment = ?{|
  +firstName: ?string,
  +lastName: string,
  +$refType: NonNullFragment$ref,
|};
export type NonNullFragment$data = NonNullFragment;
export type NonNullFragment$key = {
  +$data?: NonNullFragment$data,
  +$fragmentRefs: NonNullFragment$ref,
  ...
};
-------------------------------------------------------------------------------
/*
 * future proof enums: true
 * future proof abstract types: true
 */

import type { FragmentReference } from "relay-runtime";
declare export opaque type NonNullFragment$ref: FragmentReference;
declare export opaque type NonNullFragment$fragmentType: NonNullFragment$ref;
export type NonNullFragment = ?{|
  +firstName: ?string,
  +lastName: string,
  +$refType: NonNullFragment$ref,
|};
export type NonNullFragment$data = NonNullFragment;
export type NonNullFragment$key = {
  +$data?: NonNullFragment$data,
  +$fragmentRefs: NonNullFragment$ref,
  ...
};
